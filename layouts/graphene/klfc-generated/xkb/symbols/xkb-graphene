// Generated by KLFC 1.5.7
// https://github.com/39aldo39/klfc

default
xkb_symbols "basic" {
    key <TLDE> { [] };
    key <AE01> { [    leftarrow ] };
    key <AE02> { [   rightarrow ] };
    key <AE03> { [        Alt_L ],
                 actions[Group1] = [ SetMods(mods=Alt) ],
                 vmods=Alt };
    key <AE04> { [      percent,      percent,   braceright ] };
    key <AE05> { [       endash ] };
    key <AE06> { [] };
    key <AE07> { [] };
    key <AE08> { [     ellipsis ] };
    key <AE09> { [       emdash, bracketright, bracketright ] };
    key <AE10> { [        Alt_R ],
                 actions[Group1] = [ SetMods(mods=Alt) ],
                 vmods=Alt };
    key <AE11> { [          bar,   parenright,   parenright ] };
    key <AE12> { [] };
    key <AD01> { [            b,            B,       exclam ] };
    key <AD02> { [            l,            L,    braceleft ] };
    key <AD03> { [            d,            D,  bracketleft ] };
    key <AD04> { [            w,            W,   numbersign ] };
    key <AD05> { [            z,            Z,        equal ] };
    key <AD06> { [       Escape,         Menu,         Menu ],
                 actions[Group1] = [ NoAction(), Redirect(key=<MENU>,clearMods=Shift), Redirect(key=<MENU>,clearMods=LevelThree) ] };
    key <AD07> { [   apostrophe,     quotedbl,  asciicircum ] };
    key <AD08> { [            f,            F,           at ] };
    key <AD09> { [            o,            O,    parenleft ] };
    key <AD10> { [            u,            U,       dollar ] };
    key <AD11> { [            j,            J,        grave ] };
    key <AD12> { [    semicolon,        colon ] };
    key.type[Group1] = "ONE_LEVEL";
    key <BKSL> { [       Insert ] };
    key.type[Group1] = "NONE_SHIFT_ALTGR_ALPHABETIC";
    key <AC01> { [            n,            N,            1 ] };
    key <AC02> { [            r,            R,   asciitilde ] };
    key <AC03> { [            t,            T,       Return ] };
    key <AC04> { [            s,            S,            0 ] };
    key <AC05> { [            g,            G,    ampersand ] };
    key.type[Group1] = "NONE_SHIFT_ALTGR";
    key <AC06> { [         Home,         Home,        Prior ],
                 actions[Group1] = [ NoAction(), Redirect(key=<AC06>,clearMods=Shift), Redirect(key=<PGUP>,clearMods=LevelThree) ] };
    key.type[Group1] = "NONE_SHIFT_ALTGR_ALPHABETIC";
    key <AC07> { [            y,            Y,    backslash ] };
    key <AC08> { [            h,            H,         Left ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<LEFT>,clearMods=LevelThree) ] };
    key <AC09> { [            a,            A,           Up ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<UP>,clearMods=LevelThree) ] };
    key <AC10> { [            e,            E,         Down ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<DOWN>,clearMods=LevelThree) ] };
    key <AC11> { [            i,            I,        Right ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<RGHT>,clearMods=LevelThree) ] };
    key.type[Group1] = "TWO_LEVEL";
    key <RTRN> { [        comma,     question ] };
    key.type[Group1] = "NONE_SHIFT_ALTGR";
    key <CAPS> { [    BackSpace,    BackSpace,       Delete ],
                 actions[Group1] = [ NoAction(), Redirect(key=<CAPS>,clearMods=Shift), Redirect(key=<DELE>,clearMods=LevelThree) ] };
    key.type[Group1] = "ONE_LEVEL";
    key <BKSP> { [    Caps_Lock ],
                 actions[Group1] = [ LockMods(mods=Lock) ] };
    key.type[Group1] = "NONE_SHIFT_ALTGR_ALPHABETIC";
    key <AB01> { [            x,            X,            2 ] };
    key <AB02> { [            m,            M,            3 ] };
    key <AB03> { [            c,            C,            4 ] };
    key <AB04> { [            q,            Q,            5 ] };
    key <AB05> { [            v,            V,         plus ] };
    key.type[Group1] = "NONE_SHIFT_ALTGR";
    key <AB06> { [          End,         Next,          End ],
                 actions[Group1] = [ NoAction(), Redirect(key=<PGDN>,clearMods=Shift), Redirect(key=<AB06>,clearMods=LevelThree) ] };
    key.type[Group1] = "NONE_SHIFT_ALTGR_ALPHABETIC";
    key <AB07> { [            k,            K,     asterisk ] };
    key <AB08> { [            p,            P,            6 ] };
    key.type[Group1] = "NONE_SHIFT_ALTGR";
    key <AB09> { [       period,      greater,            7 ] };
    key <AB10> { [        minus,   underscore,            8 ] };
    key <RTSH> { [        slash,         less,            9 ] };
    key.type[Group1] = "ONE_LEVEL";
    key <LCTL> { [        Alt_L ],
                 actions[Group1] = [ SetMods(mods=Alt) ],
                 vmods=Alt };
    key <LFSH> { [    Control_L ],
                 actions[Group1] = [ SetMods(mods=Control) ] };
    key <LALT> { [ ISO_Level2_Latch ],
                 actions[Group1] = [ LatchMods(mods=Shift) ] };
    key <RALT> { [ ISO_Level3_Shift ],
                 actions[Group1] = [ SetMods(mods=LevelThree) ],
                 vmods=LevelThree };
    modifier_map Mod5 { ISO_Level3_Shift };
    modifier_map Shift { ISO_Level2_Latch };
};
